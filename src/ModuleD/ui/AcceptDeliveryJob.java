package ModuleD.ui;

import ModuleD.entity.OrderClass;
import java.util.Queue;
import java.util.concurrent.ArrayBlockingQueue;
import ModuleD.adt.DMListImplementation;
import ModuleD.adt.DMListInterface;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import ui.AdminMenu;

/**
 *
 * @author Chew
 */
public class AcceptDeliveryJob extends javax.swing.JFrame {

    private Queue<OrderClass> queueOrders = new ArrayBlockingQueue<OrderClass>(100);
    private DMListInterface<OrderClass> listOrder = new DMListImplementation<>();
    private DeliverymanWorkStatus dmWorkStat = new DeliverymanWorkStatus();
    private String statusDelivery = "Delivery";
    private int tempID = 0;

    public AcceptDeliveryJob() {
        initComponents();

        queueOrders.offer(new OrderClass(20000, 11.11, 999, "address1", 0111111111, "status1", 10000));
        queueOrders.offer(new OrderClass(20001, 22.22, 888, "address2", 0222222222, "status2", 10001));
        queueOrders.offer(new OrderClass(20002, 33.33, 777, "address3", 0333333333, "status3", 10002));
        queueOrders.offer(new OrderClass(20003, 44.44, 666, "address4", 0444444444, "status4", 10003));

        while (!queueOrders.isEmpty()) {

            listOrder.addNewEntry(queueOrders.poll());
        }
        for (int i = 0; i < listOrder.retrieveSize(); i++) {
            jcbDJob.addItem(listOrder.retrieveAllEntry(i).getOrderID());
        }

        jcbDJob.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                for (int i = 0; i < listOrder.retrieveSize(); i++) {
                    if (jcbDJob.getSelectedItem().equals(listOrder.retrieveAllEntry(i).getOrderID())) {
                        jlblOrderID.setText(String.valueOf(listOrder.retrieveAllEntry(i).getOrderID()));
                        jlblOrderTime.setText(String.valueOf(listOrder.retrieveAllEntry(i).getOrderTime()));
                        jlblOrderDate.setText(String.valueOf(listOrder.retrieveAllEntry(i).getOrderDate()));
                    }
                }
            }
        });
///////////// add previous list into current list//////////////////////////////

//        try {
//            for (int i = 0; i < dmWorkStat.getParseList().retrieveSize(); i++) {
//                listDM.addNewEntry(new DMClockInOut(dmWorkStat.getParseList().retrieveAllEntry(i).getDmName(),
//                        dmWorkStat.getParseList().retrieveAllEntry(i).getDmID(), 
//                        dmWorkStat.getParseList().retrieveAllEntry(i).getStatus(), 
//                        dmWorkStat.getParseList().retrieveAllEntry(i).getOrderID(), 
//                        dmWorkStat.getParseList().retrieveAllEntry(i).getCustID()));
//            }
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
        for (int i = 0; i < dmWorkStat.getParseList().retrieveSize(); i++) {
            if (dmWorkStat.getParseList().retrieveAllEntry(i).getStatus().equals("Available")) {
                jcbDMan.addItem(dmWorkStat.getParseList().retrieveAllEntry(i).getDmName());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlblTitleDWS = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jcbDJob = new javax.swing.JComboBox();
        jbtnConfirm = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jcbDMan = new javax.swing.JComboBox();
        jlblOrderID = new javax.swing.JLabel();
        jlblOrderDate = new javax.swing.JLabel();
        jlblOrderTime = new javax.swing.JLabel();
        jbtnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlblTitleDWS.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlblTitleDWS.setText("Orders To Be Delivered");
        jlblTitleDWS.setMaximumSize(new java.awt.Dimension(178, 22));
        jlblTitleDWS.setMinimumSize(new java.awt.Dimension(178, 22));

        jLabel1.setText("List of the available delivery jobs: ");

        jcbDJob.setMaximumRowCount(100);

        jbtnConfirm.setText("Assign");
        jbtnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConfirmActionPerformed(evt);
            }
        });

        jLabel2.setText("Order ID: ");

        jLabel3.setText("Order Time: ");

        jLabel4.setText("Order Date: ");

        jLabel5.setText("Current available deliveryman: ");

        jcbDMan.setMaximumRowCount(100);

        jbtnBack.setText("Back");
        jbtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jcbDJob, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlblTitleDWS, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(252, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(93, 93, 93))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jlblOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jlblOrderTime, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(30, 30, 30)
                                .addComponent(jlblOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jcbDMan, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jbtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(81, 81, 81))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jlblTitleDWS, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbDJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbDMan, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jlblOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jlblOrderTime, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jlblOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConfirmActionPerformed
        String tempName = jcbDMan.getSelectedItem().toString();
        int tempDMID = 0;
        tempID = Integer.valueOf(jcbDJob.getSelectedItem().toString());

        for (int i = 0; i < dmWorkStat.getParseList().retrieveSize(); i++) {
            if (dmWorkStat.getParseList().retrieveAllEntry(i).getDmName().equals(tempName)) {
                dmWorkStat.getParseList().retrieveAllEntry(i).setStatus(statusDelivery);
                tempDMID = dmWorkStat.getParseList().retrieveAllEntry(i).getDmID();
            }
        }

        for (int i = 0; i < listOrder.retrieveSize(); i++) {
            if (listOrder.retrieveAllEntry(i).getOrderID() == tempID) {
                listOrder.retrieveAllEntry(i).setStatusDelivery(statusDelivery);
                listOrder.retrieveAllEntry(i).setDmID(tempDMID);
            }
        }

    }//GEN-LAST:event_jbtnConfirmActionPerformed

    private void jbtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBackActionPerformed
        this.setVisible(false);
        new AdminMenu().setVisible(true);
    }//GEN-LAST:event_jbtnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AcceptDeliveryJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AcceptDeliveryJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AcceptDeliveryJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AcceptDeliveryJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AcceptDeliveryJob().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbtnBack;
    private javax.swing.JButton jbtnConfirm;
    private javax.swing.JComboBox jcbDJob;
    private javax.swing.JComboBox jcbDMan;
    private javax.swing.JLabel jlblOrderDate;
    private javax.swing.JLabel jlblOrderID;
    private javax.swing.JLabel jlblOrderTime;
    private javax.swing.JLabel jlblTitleDWS;
    // End of variables declaration//GEN-END:variables
}
