package ModuleD.ui;

import ModuleB.ui.HRExecMenu;
import ModuleD.entity.DMClockInOut;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.*;
import java.util.Locale;
import javax.swing.Timer;
import ModuleD.adt.DMListImplementation;
import ModuleD.adt.DMListInterface;
import ModuleE.ui.DMMainMenuUI;

/**
 *
 * @author Chew
 */
public class DeliverymanClockInOut extends javax.swing.JFrame {

    private Date date;
    private Date checkInTime,checkOutTime = null;
    private String checkInDate = "";
    private String selectedItem = null;
    

    int numOfRecord = 0;
    private SimpleDateFormat sdfDate = new SimpleDateFormat("dd/MM/yyyy", Locale.getDefault());
    private SimpleDateFormat sdfTime = new SimpleDateFormat("hh:mm aa", Locale.getDefault());
    private DMListInterface<DMClockInOut> listDM = new DMListImplementation<>();
    private HRExecMenu hrExec = new HRExecMenu();

    public DeliverymanClockInOut() {
        initComponents();
        showDate();
        showTime();
        checkInDate = jlblDate.getText();
        jcbDMan.addItem("-- Select --");

//        for (int i = 1; i < hrExec.getDmList().getSize(); i++) {
//            System.out.print(hrExec.getDmList().getEntry(i).getDmName() + " ");
//        }
        for (int i = 1; i <= hrExec.getDmList().getSize(); i++) {
            jcbDMan.addItem(hrExec.getDmList().getEntry(i).getDmName());
        }
        try {
            for (int i = 1; i <= hrExec.getDmList().getSize(); i++) {
                listDM.addNewEntry(new DMClockInOut(hrExec.getDmList().getEntry(i).getDmName(),
                        hrExec.getDmList().getEntry(i).getDmID(), "Available",
                        sdfDate.parse("12/12/2017"), sdfTime.parse("00:00 AM"), sdfTime.parse("00:00 AM")));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        jcbDMan.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                selectedItem = jcbDMan.getSelectedItem().toString();

                for (int i = 1; i <= hrExec.getDmList().getSize(); i++) {
                    if (hrExec.getDmList().getEntry(i).getDmName().equals(selectedItem)) {
                        jlblDManID.setText(String.valueOf(hrExec.getDmList().getEntry(i).getDmID()));
                    }
                }
            }
        });
    }

    void showDate() {
        date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        jlblDate.setText(sdf.format(date));
    }

    public void showTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("hh:mm aa");
                jlblTime.setText(sdf.format(date));
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlblDate = new javax.swing.JLabel();
        jlblTime = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcbDMan = new javax.swing.JComboBox();
        jlblDManID = new javax.swing.JLabel();
        jbtnClockOut = new javax.swing.JButton();
        jbtnClockIn = new javax.swing.JButton();
        jbtnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlblDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblDate.setText("11/10/2017");
        jlblDate.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jlblTime.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jlblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel3.setText("Select Deliveryman:");

        jLabel4.setText("Deliveryman ID:");

        jcbDMan.setToolTipText("Select Deliveryman");
        jcbDMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDManActionPerformed(evt);
            }
        });

        jlblDManID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jbtnClockOut.setText("CLOCK OUT");
        jbtnClockOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClockOutActionPerformed(evt);
            }
        });

        jbtnClockIn.setText("CLOCK IN");
        jbtnClockIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClockInActionPerformed(evt);
            }
        });

        jbtnBack.setText("Back");
        jbtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jlblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(145, 145, 145))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(jlblDManID, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jcbDMan, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addComponent(jbtnClockIn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jbtnClockOut, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jlblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jlblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbDMan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jlblDManID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnClockOut, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnClockIn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnClockInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClockInActionPerformed
        selectedItem = jcbDMan.getSelectedItem().toString();

        if (jlblDManID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Select a deliveryman!");
        } else {
            try {
                for (int j = 0; j < listDM.retrieveSize(); j++) {
                    if (listDM.retrieveAllEntry(j).getDmName().equals(selectedItem)) {
                        if (listDM.retrieveAllEntry(j).getClockInDate().equals(sdfDate.parse("25/12/2017"))) {
                            JOptionPane.showMessageDialog(null, "Already clock in!");
                        } else {
                            try {
                                checkInTime = sdfTime.parse(jlblTime.getText());
                                listDM.retrieveAllEntry(j).setClockInDate(sdfDate.parse(checkInDate));
                                listDM.retrieveAllEntry(j).setClockInTime(checkInTime);
                            } catch (Exception ex) {
                                ex.printStackTrace();
                            }
                            JOptionPane.showMessageDialog(null, "Clock in success!");
                        }
                    }
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jbtnClockInActionPerformed

    private void jbtnClockOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClockOutActionPerformed
        selectedItem = jcbDMan.getSelectedItem().toString();

        if (jlblDManID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Select a deliveryman!");
        } else {
            for (int j = 0; j < listDM.retrieveSize(); j++) {
                if (listDM.retrieveAllEntry(j).getDmName().equals(selectedItem)) {

                    try {
                        if (listDM.retrieveAllEntry(j).getClockInDate().equals(sdfDate.parse("25/12/2017"))) {
                            if (listDM.retrieveAllEntry(j).getClockInTime() != null) {
                                if (listDM.retrieveAllEntry(j).getClockOutTime().equals(sdfTime.parse("12:00 AM"))) {

                                    checkOutTime = sdfTime.parse(jlblTime.getText());
                                    listDM.retrieveAllEntry(j).setClockOutTime(checkOutTime);
                                    JOptionPane.showMessageDialog(null, "Clock out success!");
                                } else {
                                    JOptionPane.showMessageDialog(null, "Operation not allowed!");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Clock out not availabe!");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Today have not clock in yet!");
                        }
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            }
        }
    }//GEN-LAST:event_jbtnClockOutActionPerformed

    private void jcbDManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDManActionPerformed
        // TODO adyour handling code here
    }//GEN-LAST:event_jcbDManActionPerformed

    private void jbtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBackActionPerformed
        this.setVisible(false);
        new DMMainMenuUI().setVisible(true);
    }//GEN-LAST:event_jbtnBackActionPerformed

    public void reset() {
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliverymanClockInOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliverymanClockInOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliverymanClockInOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliverymanClockInOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliverymanClockInOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbtnBack;
    private javax.swing.JButton jbtnClockIn;
    private javax.swing.JButton jbtnClockOut;
    private javax.swing.JComboBox jcbDMan;
    private javax.swing.JLabel jlblDManID;
    private javax.swing.JLabel jlblDate;
    private javax.swing.JLabel jlblTime;
    // End of variables declaration//GEN-END:variables
}
